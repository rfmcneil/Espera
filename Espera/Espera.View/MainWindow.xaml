<Controls:MetroWindow x:Class="Espera.View.MainWindow"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                      xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
                      xmlns:ViewModels="clr-namespace:Espera.View.ViewModels"
                      Title="Espera"
                      Width="800"
                      Height="600"
                      Closing="MetroWindowClosing"
                      Icon="/Espera;component/Images/ApplicationIcon.png"
                      KeyUp="MetroWindowKeyUp"
                      MouseDown="MainWindowMouseDown"
                      WindowState="Maximized">
    <Window.DataContext>
        <ViewModels:MainViewModel x:Name="mainViewModel" />
    </Window.DataContext>
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Colours.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Fonts.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
            <Style TargetType="{x:Type ListBox}">
                <Setter Property="BorderBrush" Value="Transparent" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ListBox}">
                            <ScrollViewer>
                                <ItemsPresenter />
                            </ScrollViewer>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style TargetType="{x:Type ListBoxItem}">
                <Setter Property="MinHeight" Value="25" />
                <Setter Property="Margin" Value="0" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ListBoxItem}">
                            <Border x:Name="Border"
                                    Background="{TemplateBinding Background}"
                                    SnapsToDevicePixels="True">
                                <ContentPresenter Margin="5, 0, 0, 0" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter TargetName="Border" Property="Background" Value="{DynamicResource AccentColorBrush}" />
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="Border" Property="Background">
                                        <Setter.Value>
                                            <SolidColorBrush Color="{DynamicResource AccentColor3}" />
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsEnabled" Value="False" />
                                        <Condition Property="IsSelected" Value="True" />
                                    </MultiTrigger.Conditions>
                                    <MultiTrigger.Setters>
                                        <Setter TargetName="Border" Property="Background" Value="#353535" />
                                    </MultiTrigger.Setters>
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsSelected" Value="True" />
                                        <Condition Property="Selector.IsSelectionActive" Value="True" />
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="Border" Property="Background">
                                        <Setter.Value>
                                            <SolidColorBrush Color="{DynamicResource AccentColor2}" />
                                        </Setter.Value>
                                    </Setter>
                                </MultiTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="VolumeButtonStyle" TargetType="{x:Type Button}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Width="25"
                                    Height="25"
                                    Background="Transparent">
                                <ContentPresenter />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="ColorPickerButtonStyle" TargetType="{x:Type Button}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Width="25"
                                    Height="25"
                                    Margin="5, 0, 5, 0"
                                    Background="{TemplateBinding Background}">
                                <ContentPresenter />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="AdminHeaderStyle" TargetType="{x:Type TextBlock}">
                <Setter Property="FontSize" Value="26.667" />
                <Setter Property="FontFamily" Value="{DynamicResource HeaderFontFamily}" />
                <Setter Property="Margin" Value="0, 15, 0, 10" />
            </Style>
            <Style x:Key="SettingsHeaderStyle" TargetType="{x:Type TextBlock}">
                <Setter Property="FontSize" Value="48" />
                <Setter Property="FontFamily" Value="{DynamicResource HeaderFontFamily}" />
            </Style>
            <Style x:Key="ArtistsHeaderStyle" TargetType="{x:Type TextBlock}">
                <Setter Property="FontSize" Value="48" />
                <Setter Property="FontFamily" Value="{DynamicResource HeaderFontFamily}" />
            </Style>
            <Style x:Key="VideoInfoHeaderStyle" TargetType="{x:Type TextBlock}">
                <Setter Property="FontSize" Value="48" />
                <Setter Property="FontFamily" Value="{DynamicResource HeaderFontFamily}" />
            </Style>
            <Style x:Key="PlaylistsHeaderStyle" TargetType="{x:Type TextBlock}">
                <Setter Property="FontSize" Value="48" />
                <Setter Property="FontFamily" Value="{DynamicResource HeaderFontFamily}" />
            </Style>
        </ResourceDictionary>
    </Window.Resources>
    <Grid x:Name="mainGrid" Focusable="True" Margin="10">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <Grid Grid.Row="0" Height="30">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <StackPanel Grid.Column="0" Orientation="Horizontal">
                <Button Click="AddSongsButtonClick"
                        Padding="0"
                        ToolTip="Add music">
                    <Image Source="/Espera;component/Images/Add.png" />
                </Button>
                <Button Width="30"
                        Margin="15, 0, 0, 0"
                        Padding="0">
                    <Button.Style>
                        <Style BasedOn="{StaticResource {x:Type Button}}" TargetType="{x:Type Button}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=IsPlaying}" Value="True">
                                    <Setter Property="Command" Value="{Binding Path=PauseCommand}" />
                                    <Setter Property="ToolTip" Value="Pause" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Path=IsPlaying}" Value="False">
                                    <Setter Property="Command" Value="{Binding Path=PlayCommand}" />
                                    <Setter Property="CommandParameter" Value="False" />
                                    <Setter Property="ToolTip" Value="Play" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                    <Image>
                        <Image.Style>
                            <Style TargetType="{x:Type Image}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=IsPlaying}" Value="True">
                                        <Setter Property="Source" Value="/Espera;component/Images/Pause.png" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Path=IsPlaying}" Value="False">
                                        <Setter Property="Source" Value="/Espera;component/Images/Play.png" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Image.Style>
                    </Image>
                </Button>
                <Button Margin="5, 0, 0, 0"
                        Command="{Binding Path=PreviousSongCommand}"
                        Padding="0"
                        ToolTip="Previous song">
                    <Image Source="/Espera;component/Images/Previous.png" />
                </Button>
                <Button Margin="5, 0, 0, 0"
                        Command="{Binding Path=NextSongCommand}"
                        Padding="0"
                        ToolTip="Next song">
                    <Image Source="/Espera;component/Images/Next.png" />
                </Button>
            </StackPanel>
            <StackPanel Grid.Column="1"
                        Margin="10, 0, 0, 0"
                        Orientation="Horizontal">
                <Button VerticalAlignment="Center"
                        Command="{Binding Path=MuteCommand}"
                        Style="{StaticResource VolumeButtonStyle}"
                        ToolTip="Mute">
                    <Image Source="/Espera;component/Images/Mute.png" />
                </Button>
                <Slider Width="200"
                        IsEnabled="{Binding Path=CanChangeVolume}"
                        IsMoveToPointEnabled="True"
                        Maximum="1"
                        Value="{Binding Path=Volume}" />
                <Button VerticalAlignment="Center"
                        Command="{Binding Path=UnMuteCommand}"
                        Style="{StaticResource VolumeButtonStyle}"
                        ToolTip="Unmute">
                    <Image Source="/Espera;component/Images/Unmute.png" />
                </Button>
            </StackPanel>
            <Slider Grid.Column="2"
                    Margin="5, 0, 0, 0"
                    IsEnabled="{Binding Path=CanChangeTime}"
                    IsMoveToPointEnabled="True"
                    Maximum="{Binding Path=TotalSeconds}"
                    Value="{Binding Path=CurrentSeconds}" />
            <StackPanel Grid.Column="3"
                        Margin="5, 0, 0, 0"
                        Orientation="Horizontal">
                <TextBlock VerticalAlignment="Center" Text="{Binding Path=CurrentTime, StringFormat=mm\\:ss}" />
                <TextBlock VerticalAlignment="Center" Text="/" />
                <TextBlock VerticalAlignment="Center" Text="{Binding Path=TotalTime, StringFormat=mm\\:ss}" />
            </StackPanel>
            <TextBox Grid.Column="4"
                     Width="150"
                     Margin="10, 0, 0, 0"
                     VerticalAlignment="Center"
                     VerticalContentAlignment="Center"
                     Controls:TextboxHelper.ClearTextButton="True"
                     Controls:TextboxHelper.Watermark="Search"
                     KeyUp="SearchTextBoxKeyUp"
                     Text="{Binding Path=CurrentSongSource.SearchText,
                                    UpdateSourceTrigger=PropertyChanged}" />
            <ToggleButton Grid.Column="5"
                          Margin="10, 0, 0, 0"
                          IsChecked="{Binding Path=AdministratorViewModel.Show}"
                          Padding="0"
                          ToolTip="Settings">
                <Image Source="/Espera;component/Images/Settings.png" />
            </ToggleButton>
        </Grid>
        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="200" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Grid Grid.Column="0" Visibility="{Binding Path=IsLocal, Converter={StaticResource BooleanToVisibilityConverter}}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <TextBlock Grid.Row="0"
                           Style="{StaticResource ArtistsHeaderStyle}"
                           Text="artists" />
                <ListBox Grid.Row="1"
                         DataContext="{Binding Path=LocalViewModel}"
                         ItemsSource="{Binding Path=Artists}"
                         SelectedItem="{Binding Path=SelectedArtist}" />
            </Grid>
            <Grid Grid.Column="0" Visibility="{Binding Path=IsYoutube, Converter={StaticResource BooleanToVisibilityConverter}}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <TextBlock Grid.Row="0"
                           Style="{StaticResource VideoInfoHeaderStyle}"
                           Text="video info" />
                <Grid Grid.Row="1"
                      DataContext="{Binding Path=YoutubeViewModel}"
                      Visibility="{Binding Path=IsSongSelected,
                                           Converter={StaticResource BooleanToVisibilityConverter}}">
                    <Grid Margin="5" DataContext="{Binding Path=SelectedSongs/}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <Grid Grid.Row="0">
                            <Controls:ProgressRing Margin="0, 35, 0, 0" IsActive="True" />
                            <Image Grid.Row="0"
                                   Source="{Binding Path=Thumbnail}"
                                   Visibility="{Binding Path=HasThumbnail,
                                                        Converter={StaticResource BooleanToVisibilityConverter}}" />
                        </Grid>
                        <ScrollViewer Grid.Row="1"
                                      Margin="0, 10, 0, 0 "
                                      VerticalScrollBarVisibility="Auto">
                            <TextBlock Text="{Binding Path=Description}" TextWrapping="Wrap" />
                        </ScrollViewer>
                    </Grid>
                </Grid>
            </Grid>
            <Grid Grid.Column="1">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="{Binding Path=PlaylistHeight}" />
                </Grid.RowDefinitions>
                <TabControl Grid.Row="0">
                    <TabItem Header="local" IsSelected="{Binding Path=IsLocal}">
                        <ListView ContextMenuOpening="SongListContextMenuOpening"
                                  DataContext="{Binding Path=LocalViewModel}"
                                  ItemsSource="{Binding Path=SelectableSongs}"
                                  KeyUp="SongListKeyUp"
                                  ScrollViewer.CanContentScroll="True"
                                  SelectionChanged="SongListSelectionChanged">
                            <ListView.Style>
                                <Style BasedOn="{StaticResource {x:Type ListView}}" TargetType="{x:Type ListView}">
                                    <Setter Property="SelectionMode" Value="Extended" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Path=IsAdmin}" Value="False">
                                            <Setter Property="SelectionMode" Value="Single" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </ListView.Style>
                            <ListView.ContextMenu>
                                <ContextMenu>
                                    <MenuItem Command="{Binding Path=AddToPlaylistCommand}" Header="Add to playlist" />
                                    <MenuItem Command="{Binding Path=RemoveFromLibraryCommand}" Header="Remove from library" />
                                    <MenuItem Command="{Binding Path=RemoveFromLibraryAndPlaylistCommand}" Header="Remove from library and playlist" />
                                </ContextMenu>
                            </ListView.ContextMenu>
                            <ListView.ItemContainerStyle>
                                <Style BasedOn="{StaticResource {x:Type ListViewItem}}" TargetType="{x:Type ListViewItem}">
                                    <EventSetter Event="MouseDoubleClick" Handler="SongDoubleClick" />
                                </Style>
                            </ListView.ItemContainerStyle>
                            <ListView.View>
                                <GridView>
                                    <GridViewColumn Width="{Binding Path=TitleColumnWidth, Mode=TwoWay}">
                                        <GridViewColumnHeader Click="SortLocalSongTitle" Content="Title" />
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate>
                                                <TextBlock Text="{Binding Path=Title}" TextTrimming="CharacterEllipsis" />
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                    <GridViewColumn Width="{Binding Path=DurationColumnWidth, Mode=TwoWay}">
                                        <GridViewColumnHeader Click="SortLocalSongDuration" Content="Duration" />
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate>
                                                <TextBlock Text="{Binding Path=Duration, StringFormat=mm\\:ss}" TextTrimming="CharacterEllipsis" />
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                    <GridViewColumn Width="{Binding Path=ArtistColumnWidth, Mode=TwoWay}">
                                        <GridViewColumnHeader Click="SortLocalSongArtist" Content="Artist" />
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate>
                                                <TextBlock Text="{Binding Path=Artist}" TextTrimming="CharacterEllipsis" />
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                    <GridViewColumn Width="{Binding Path=AlbumColumnWidth, Mode=TwoWay}">
                                        <GridViewColumnHeader Click="SortLocalSongAlbum" Content="Album" />
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate>
                                                <TextBlock Text="{Binding Path=Album}" TextTrimming="CharacterEllipsis" />
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                    <GridViewColumn Width="{Binding Path=GenreColumnWidth, Mode=TwoWay}">
                                        <GridViewColumnHeader Click="SortLocalSongGenre" Content="Genre" />
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate>
                                                <TextBlock Text="{Binding Path=Genre}" TextTrimming="CharacterEllipsis" />
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                    <GridViewColumn Width="{Binding Path=PathColumnWidth, Mode=TwoWay}" Header="Path">
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate>
                                                <TextBlock Text="{Binding Path=Path}" TextTrimming="CharacterEllipsis" />
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                </GridView>
                            </ListView.View>
                        </ListView>
                    </TabItem>
                    <TabItem Header="youtube"
                             IsEnabled="{Binding Path=CanUseYoutube}"
                             IsSelected="{Binding Path=IsYoutube}">
                        <Grid DataContext="{Binding Path=YoutubeViewModel}">
                            <ListView ContextMenuOpening="SongListContextMenuOpening"
                                      ItemsSource="{Binding Path=SelectableSongs}"
                                      SelectionChanged="SongListSelectionChanged">
                                <ListView.Style>
                                    <Style BasedOn="{StaticResource {x:Type ListView}}" TargetType="{x:Type ListView}">
                                        <Setter Property="SelectionMode" Value="Extended" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Path=IsAdmin}" Value="False">
                                                <Setter Property="SelectionMode" Value="Single" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Path=IsSearching}" Value="True">
                                                <Setter Property="Visibility" Value="Hidden" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </ListView.Style>
                                <ListView.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem Command="{Binding Path=AddToPlaylistCommand}" Header="Add to playlist" />
                                    </ContextMenu>
                                </ListView.ContextMenu>
                                <ListView.ItemContainerStyle>
                                    <Style BasedOn="{StaticResource {x:Type ListViewItem}}" TargetType="{x:Type ListViewItem}">
                                        <EventSetter Event="MouseDoubleClick" Handler="SongDoubleClick" />
                                    </Style>
                                </ListView.ItemContainerStyle>
                                <ListView.View>
                                    <GridView>
                                        <GridViewColumn Width="{Binding Path=TitleColumnWidth, Mode=TwoWay}">
                                            <GridViewColumnHeader Click="SortYoutubeSongTitle" Content="Title" />
                                            <GridViewColumn.CellTemplate>
                                                <DataTemplate>
                                                    <TextBlock Text="{Binding Path=Title}" TextTrimming="CharacterEllipsis" />
                                                </DataTemplate>
                                            </GridViewColumn.CellTemplate>
                                        </GridViewColumn>
                                        <GridViewColumn Width="{Binding Path=DurationColumnWidth, Mode=TwoWay}">
                                            <GridViewColumnHeader Click="SortYoutubeSongDuration" Content="Duration" />
                                            <GridViewColumn.CellTemplate>
                                                <DataTemplate>
                                                    <TextBlock Text="{Binding Path=Duration, StringFormat=mm\\:ss}" TextTrimming="CharacterEllipsis" />
                                                </DataTemplate>
                                            </GridViewColumn.CellTemplate>
                                        </GridViewColumn>
                                        <GridViewColumn Width="{Binding Path=RatingColumnWidth, Mode=TwoWay}">
                                            <GridViewColumnHeader Click="SortYoutubeSongRating" Content="Rating" />
                                            <GridViewColumn.CellTemplate>
                                                <DataTemplate>
                                                    <TextBlock Text="{Binding Path=Rating, StringFormat=\{0:0.0\}, TargetNullValue=n/a}" TextTrimming="CharacterEllipsis" />
                                                </DataTemplate>
                                            </GridViewColumn.CellTemplate>
                                        </GridViewColumn>
                                        <GridViewColumn Width="{Binding Path=LinkColumnWidth, Mode=TwoWay}" Header="Link">
                                            <GridViewColumn.CellTemplate>
                                                <DataTemplate>
                                                    <TextBlock>
                                                        <Hyperlink Command="{Binding Path=OpenPathCommand}" Foreground="White">
                                                            <TextBlock Text="{Binding Path=Path}" TextTrimming="CharacterEllipsis" />
                                                        </Hyperlink>
                                                    </TextBlock>
                                                </DataTemplate>
                                            </GridViewColumn.CellTemplate>
                                        </GridViewColumn>
                                    </GridView>
                                </ListView.View>
                            </ListView>
                            <Grid Visibility="{Binding Path=IsSearching, Converter={StaticResource BooleanToVisibilityConverter}}">
                                <Controls:ProgressRing IsActive="True" />
                            </Grid>
                        </Grid>
                    </TabItem>
                </TabControl>
                <GridSplitter Grid.Row="1"
                              Height="3"
                              HorizontalAlignment="Stretch"
                              Background="Transparent"
                              Foreground="Transparent" />
                <Grid Grid.Row="2">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <Grid Grid.Row="0"
                          Margin="5, 0, 0, 0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid Grid.Column="0" Width="175">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <TextBlock Grid.Row="0"
                                       Style="{StaticResource PlaylistsHeaderStyle}"
                                       Text="playlists" />
                            <Grid Grid.Row="1"
                                        Height="30"
                                        Margin="0, 5, 0, 0"
                                        HorizontalAlignment="Stretch">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <Button Width="30"
                                        Grid.Column="0"
                                        Command="{Binding Path=AddPlaylistCommand}"
                                        Padding="0"
                                        IsEnabled="{Binding Path=CanSwitchPlaylist}">
                                    <Image Source="/Espera;component/Images/NewPlaylist.png" />
                                </Button>
                                <Button Width="30"
                                        Grid.Column="1"
                                        Command="{Binding Path=RemovePlaylistCommand}"
                                        Padding="0"
                                        IsEnabled="{Binding Path=CanSwitchPlaylist}">
                                    <Image Source="/Espera;component/Images/RemovePlaylist.png" />
                                </Button>
                                <Button Width="30"
                                        Grid.Column="2"
                                        Command="{Binding Path=EditPlaylistNameCommand}"
                                        Padding="0"
                                        IsEnabled="{Binding Path=CanSwitchPlaylist}">
                                    <Image Source="/Espera;component/Images/EditPlaylistName.png" />
                                </Button>
                                <Button Width="30"
                                        Grid.Column="3"
                                        Command="{Binding Path=ShufflePlaylistCommand}"
                                        Padding="0"
                                        IsEnabled="{Binding Path=CanSwitchPlaylist}">
                                    <Image Source="/Espera;component/Images/ShufflePlaylist.png" />
                                </Button>
                            </Grid>
                            <ListBox Grid.Row="2"
                                     Margin="0, 5, 0, 0"
                                     ItemsSource="{Binding Path=Playlists}"
                                     SelectedItem="{Binding Path=CurrentPlaylist}"
                                     IsEnabled="{Binding Path=CanSwitchPlaylist}"
                                     KeyUp="PlaylistsKeyUp">
                                <ListBox.ItemTemplate>
                                    <DataTemplate>
                                        <Grid>
                                            <TextBox Height="25"
                                                     MinHeight="25"
                                                     Margin="0, 0, 5, 0"
                                                     VerticalAlignment="Center"
                                                     VerticalContentAlignment="Center"
                                                     KeyUp="PlaylistNameTextBoxKeyUp"
                                                     LostFocus="PlaylistNameTextBoxLostFocus"
                                                     GotFocus="PlaylistNameTextBoxGotFocus"
                                                     Padding="0"
                                                     Text="{Binding Path=Name,
                                                                    ValidatesOnDataErrors=True,
                                                                    UpdateSourceTrigger=PropertyChanged}">
                                                <TextBox.Style>
                                                    <Style BasedOn="{StaticResource {x:Type TextBox}}" TargetType="{x:Type TextBox}">
                                                        <Style.Triggers>
                                                            <Trigger Property="IsEnabled" Value="False">
                                                                <Setter Property="Visibility" Value="Hidden" />
                                                            </Trigger>
                                                            <DataTrigger Binding="{Binding Path=EditName}" Value="False">
                                                                <Setter Property="Background" Value="Transparent" />
                                                                <Setter Property="BorderThickness" Value="0" />
                                                                <Setter Property="IsReadOnly" Value="True" />
                                                                <Setter Property="IsHitTestVisible" Value="False" />
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding Path=EditName}" Value="True">
                                                                <Setter Property="FocusManager.FocusedElement" Value="{Binding RelativeSource={x:Static RelativeSource.Self}}" />
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </TextBox.Style>
                                            </TextBox>
                                            <TextBlock VerticalAlignment="Center"
                                                       Text="{Binding Path=Name}"
                                                       Margin="5, 0, 5, 0"
                                                       FontFamily="{DynamicResource ContentFontFamily}"
                                                       FontSize="{DynamicResource ContentFontSize}">
                                                <TextBlock.Style>
                                                    <Style TargetType="{x:Type TextBlock}">
                                                        <Style.Triggers>
                                                            <Trigger Property="IsEnabled" Value="True">
                                                                <Setter Property="Visibility" Value="Hidden" />
                                                            </Trigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </TextBlock.Style>
                                            </TextBlock>
                                        </Grid>
                                    </DataTemplate>
                                </ListBox.ItemTemplate>
                                <ListBox.ItemContainerStyle>
                                    <Style BasedOn="{StaticResource {x:Type ListBoxItem}}" TargetType="{x:Type ListBoxItem}">
                                        <Setter Property="Height" Value="35" />
                                    </Style>
                                </ListBox.ItemContainerStyle>
                            </ListBox>
                        </Grid>
                        <ListView Grid.Column="1"
                                  ContextMenuOpening="PlaylistContextMenuOpening"
                                  ItemsSource="{Binding Path=CurrentPlaylist.Songs}"
                                  KeyUp="PlaylistKeyUp"
                                  ScrollViewer.CanContentScroll="True"
                                  SelectionChanged="PlaylistSelectionChanged"
                                  Margin="5, 0, 0, 0">
                            <ListView.ContextMenu>
                                <ContextMenu>
                                    <MenuItem Command="{Binding Path=PlayCommand}" Header="Play" />
                                    <MenuItem Command="{Binding Path=RemoveSelectedPlaylistEntriesCommand}" Header="Remove" />
                                </ContextMenu>
                            </ListView.ContextMenu>
                            <ListView.ItemContainerStyle>
                                <Style BasedOn="{StaticResource {x:Type ListViewItem}}" TargetType="{x:Type ListViewItem}">
                                    <EventSetter Event="MouseDoubleClick" Handler="PlaylistDoubleClick" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Path=IsInactive}" Value="True">
                                            <Setter Property="Foreground" Value="Gray" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </ListView.ItemContainerStyle>
                            <ListView.View>
                                <GridView>
                                    <GridViewColumn Width="35">
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate>
                                                <Image Width="25"
                                                       Height="25"
                                                       Source="/Espera;component/Images/CurrentSongIcon.png"
                                                       Visibility="{Binding Path=IsPlaying,
                                                                            Converter={StaticResource BooleanToVisibilityConverter}}" />
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                    <GridViewColumn Width="{Binding Path=PlaylistTitleColumnWidth, Mode=TwoWay}" Header="Title">
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate>
                                                <TextBlock Text="{Binding Path=Title}" TextTrimming="CharacterEllipsis" />
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                    <GridViewColumn Width="{Binding Path=PlaylistDurationColumnWidth, Mode=TwoWay}" Header="Duration">
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate>
                                                <TextBlock Text="{Binding Path=Duration, StringFormat=mm\\:ss}" TextTrimming="CharacterEllipsis" />
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                    <GridViewColumn Width="{Binding Path=PlaylistArtistColumnWidth, Mode=TwoWay}" Header="Artist">
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate>
                                                <TextBlock Text="{Binding Path=Artist}" TextTrimming="CharacterEllipsis" />
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                    <GridViewColumn Width="{Binding Path=PlaylistAlbumColumnWidth, Mode=TwoWay}" Header="Album">
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate>
                                                <TextBlock Text="{Binding Path=Album}" TextTrimming="CharacterEllipsis" />
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                    <GridViewColumn Width="{Binding Path=PlaylistGenreColumnWidth, Mode=TwoWay}" Header="Genre">
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate>
                                                <TextBlock Text="{Binding Path=Genre}" TextTrimming="CharacterEllipsis" />
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                    <GridViewColumn Width="{Binding Path=PlaylistSourceColumnWidth, Mode=TwoWay}" Header="Source">
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate>
                                                <TextBlock Text="{Binding Path=Source}" TextTrimming="CharacterEllipsis" />
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                    <GridViewColumn Width="{Binding Path=PlaylistCachingProgressColumnWidth, Mode=TwoWay}">
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate>
                                                <Grid>
                                                    <Grid.Style>
                                                        <Style TargetType="{x:Type Grid}">
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding Path=ShowCaching}" Value="False">
                                                                    <Setter Property="Visibility" Value="Hidden" />
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </Grid.Style>
                                                    <TextBlock VerticalAlignment="Center">
                                                        <TextBlock.Style>
                                                            <Style TargetType="{x:Type TextBlock}">
                                                                <Style.Triggers>
                                                                    <DataTrigger Binding="{Binding Path=HasCachingFailed}" Value="True">
                                                                        <Setter Property="Text" Value="Caching failed!" />
                                                                    </DataTrigger>
                                                                    <DataTrigger Binding="{Binding Path=HasCachingFailed}" Value="False">
                                                                        <Setter Property="Text" Value="{Binding Path=CacheProgress, StringFormat=Caching... \{0\}%, IsAsync=True}" />
                                                                    </DataTrigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </TextBlock.Style>
                                                    </TextBlock>
                                                </Grid>
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                </GridView>
                            </ListView.View>
                        </ListView>
                    </Grid>
                    <StackPanel Grid.Row="1"
                                HorizontalAlignment="Center"
                                Orientation="Horizontal">
                        <TextBlock Text="{Binding Path=SongsRemaining}" />
                        <TextBlock Text=" song" />
                        <TextBlock Text="s">
                            <TextBlock.Style>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Path=SongsRemaining}" Value="1">
                                            <Setter Property="Visibility" Value="Collapsed" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                        <TextBlock Text=" remaining, with " />
                        <TextBlock Text="{Binding Path=TimeRemaining.TotalMinutes, FallbackValue=0, StringFormat=\{0:0.0\}}" />
                        <TextBlock Text=" minutes play time" />
                    </StackPanel>
                    <StackPanel Grid.Row="2"
                                Margin="0, 5, 0, 0"
                                HorizontalAlignment="Center"
                                Orientation="Horizontal"
                                Visibility="{Binding Path=AdministratorViewModel.EnablePlaylistTimeout,
                                                     Converter={StaticResource BooleanToVisibilityConverter}}">
                        <StackPanel.Style>
                            <Style TargetType="{x:Type StackPanel}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=DisplayTimeoutWarning}" Value="True">
                                        <DataTrigger.EnterActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity">
                                                        <LinearDoubleKeyFrame KeyTime="0:0:1" Value="0" />
                                                        <LinearDoubleKeyFrame KeyTime="0:0:2" Value="1" />
                                                        <LinearDoubleKeyFrame KeyTime="0:0:3" Value="0" />
                                                        <LinearDoubleKeyFrame KeyTime="0:0:4" Value="1" />
                                                    </DoubleAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </DataTrigger.EnterActions>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </StackPanel.Style>
                        <TextBlock Text="Remaining playlist timeout: " />
                        <TextBlock Text="{Binding Path=RemainingPlaylistTimeout, StringFormat=hh\\:mm\\:ss}" />
                    </StackPanel>
                </Grid>
            </Grid>
            <Grid Grid.Column="2"
                  Width="200"
                  DataContext="{Binding Path=AdministratorViewModel}"
                  Visibility="{Binding Path=Show,
                                       Converter={StaticResource BooleanToVisibilityConverter}}">
                <Grid.Style>
                    <Style TargetType="{x:Type Grid}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Path=IsAdminCreated, Mode=OneTime}" Value="False">
                                <Setter Property="Visibility" Value="Collapsed" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Path=IsParty}" Value="True">
                                <Setter Property="Visibility" Value="Collapsed" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Grid.Style>
                <Grid Visibility="{Binding Path=IsParty, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <StackPanel Margin="10, 0, 10, 0"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Center">
                        <PasswordBox Name="loginPasswordBox"
                                     VerticalContentAlignment="Center"
                                     Controls:TextboxHelper.Watermark="Administrator password"
                                     PasswordChanged="LoginPasswordChanged" />
                        <Button Margin="0, 10, 0, 0"
                                Click="LoginButtonClick"
                                Command="{Binding Path=LoginCommand}"
                                Content="Login" />
                        <TextBlock Margin="0, 10, 0, 0"
                                   HorizontalAlignment="Center"
                                   Foreground="Red"
                                   Text="Wrong password!"
                                   Visibility="{Binding Path=IsWrongPassword,
                                                        Converter={StaticResource BooleanToVisibilityConverter}}" />
                    </StackPanel>
                </Grid>
                <Grid Visibility="{Binding Path=IsAdmin, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <ScrollViewer>
                        <StackPanel Margin="5, 0, 5, 0">
                            <TextBlock Style="{StaticResource SettingsHeaderStyle}" Text="settings" />
                            <TextBlock Style="{StaticResource AdminHeaderStyle}" Text="accent" />
                            <StackPanel Margin="-5, 0, 0, 0"
                                        HorizontalAlignment="Left"
                                        Orientation="Horizontal">
                                <Button Background="#CCCB0000"
                                        Click="RedColorButtonButtonClick"
                                        Style="{StaticResource ColorPickerButtonStyle}" />
                                <Button Background="#CC48CB00"
                                        Click="GreenColorButtonButtonClick"
                                        Style="{StaticResource ColorPickerButtonStyle}" />
                                <Button Background="#FF1C739D"
                                        Click="BlueColorButtonButtonClick"
                                        Style="{StaticResource ColorPickerButtonStyle}" />
                                <Button Background="#CCB400FF"
                                        Click="PurpleColorButtonButtonClick"
                                        Style="{StaticResource ColorPickerButtonStyle}" />
                            </StackPanel>
                            <TextBlock Style="{StaticResource AdminHeaderStyle}" Text="party mode" />
                            <CheckBox IsChecked="{Binding Path=LockPlayPause}">
                                <AccessText Text="Lock play/pause" TextWrapping="Wrap" />
                            </CheckBox>
                            <CheckBox Margin="0, 10, 0, 0" IsChecked="{Binding Path=LockVolume}">
                                <AccessText Text="Lock volume" TextWrapping="Wrap" />
                            </CheckBox>
                            <CheckBox Margin="0, 10, 0, 0" IsChecked="{Binding Path=LockTime}">
                                <AccessText Text="Lock time" TextWrapping="Wrap" />
                            </CheckBox>
                            <CheckBox Margin="0, 10, 0, 0" IsChecked="{Binding Path=LockPlaylistSwitching}">
                                <AccessText Text="Lock playlist switching" TextWrapping="Wrap" />
                            </CheckBox>
                            <CheckBox Margin="0, 10, 0, 0" IsChecked="{Binding Path=LockPlaylistRemoval}">
                                <AccessText Text="Lock song removal from playlist" TextWrapping="Wrap" />
                            </CheckBox>
                            <CheckBox Margin="0, 10, 0, 0" IsChecked="{Binding Path=LockLibraryRemoval}">
                                <AccessText Text="Lock song removal from library" TextWrapping="Wrap" />
                            </CheckBox>
                            <CheckBox Margin="0, 10, 0, 0" IsChecked="{Binding Path=EnablePlaylistTimeout}">
                                <AccessText Text="Enable timeout when adding songs to the playlist" TextWrapping="Wrap" />
                            </CheckBox>
                            <StackPanel Margin="30, 5, 0, 0"
                                        IsEnabled="{Binding Path=EnablePlaylistTimeout}"
                                        Orientation="Horizontal">
                                <TextBlock VerticalAlignment="Center" Text="Timeout:" />
                                <TextBox Width="30"
                                         Margin="5, 0, 0, 0"
                                         VerticalAlignment="Center"
                                         VerticalContentAlignment="Center"
                                         Text="{Binding Path=PlaylistTimeout}" />
                                <TextBlock Margin="5, 0, 0, 0"
                                           VerticalAlignment="Center"
                                           Text="Seconds" />
                            </StackPanel>
                            <TextBlock Style="{StaticResource AdminHeaderStyle}" Text="youtube" />
                            <CheckBox IsChecked="{Binding Path=StreamYoutube}" IsEnabled="{Binding Path=IsVlcInstalled}">
                                <AccessText Text="Stream from Youtube&#x0a;Has better quality, but requires VLC media player (32-bit) greater or equal v2.0 to be installed.&#x0a;Changing this option requires a restart." TextWrapping="Wrap" />
                            </CheckBox>
                            <TextBlock Style="{StaticResource AdminHeaderStyle}" Text="about" />
                            <TextBlock Text="{Binding Path=Version, StringFormat=Espera v\{0\}}" />
                            <TextBlock Text="Author: Dennis Daume" />
                            <TextBlock>
                                <Hyperlink Command="{Binding Path=OpenLinkCommand}" CommandParameter="{Binding Path=Homepage}">
                                    <Run Foreground="#FF00B7C0" Text="{Binding Path=Homepage, Mode=OneTime}" />
                                </Hyperlink>
                            </TextBlock>
                            <TextBlock>
                                <Hyperlink Command="{Binding Path=OpenLinkCommand}" CommandParameter="{Binding Path=IssuesPage}">
                                    <Run Foreground="#FF00B7C0" Text="Report a bug" />
                                </Hyperlink>
                            </TextBlock>
                        </StackPanel>
                    </ScrollViewer>
                    <StackPanel Grid.Row="1"
                                Margin="10, 0, 10, 10"
                                Orientation="Vertical">
                        <PasswordBox Name="adminPasswordBox"
                                     Margin="0, 5, 0, 0"
                                     VerticalContentAlignment="Center"
                                     Controls:TextboxHelper.Watermark="Enter a password"
                                     PasswordChanged="CreationPasswordChanged" />
                        <Button Margin="0, 5, 0, 0"
                                Click="CreateAdminButtonClick"
                                Command="{Binding Path=CreateAdminCommand}"
                                Content="Create Administrator" />
                        <Button Margin="0, 15, 0, 0"
                                Command="{Binding Path=ChangeToPartyCommand}"
                                Content="Enter party mode" />
                    </StackPanel>
                </Grid>
            </Grid>
        </Grid>
        <StatusBar Grid.Row="2"
                   Height="25"
                   Margin="0, 5, 0, 0"
                   Background="Transparent"
                   DataContext="{Binding Path=LocalViewModel.StatusViewModel}"
                   Visibility="{Binding Path=IsUpdating,
                                        Converter={StaticResource BooleanToVisibilityConverter}}">
            <StatusBarItem Content="Updating library..." />
        </StatusBar>
        <StatusBar Grid.Row="2"
                   Height="25"
                   Margin="0, 5, 0, 0"
                   Background="Transparent"
                   DataContext="{Binding Path=LocalViewModel.StatusViewModel}"
                   Visibility="{Binding Path=IsAdding,
                                        Converter={StaticResource BooleanToVisibilityConverter}}">
            <StatusBarItem>
                <ProgressBar Width="200"
                             IsIndeterminate="{Binding Path=IsProgressUnkown}"
                             Maximum="{Binding Path=TotalTags}"
                             Value="{Binding Path=ProcessedTags,
                                             Mode=OneWay}" />
            </StatusBarItem>
            <StatusBarItem>
                <Grid>
                    <StackPanel Orientation="Horizontal">
                        <StackPanel.Style>
                            <Style TargetType="{x:Type StackPanel}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=IsProgressUnkown}" Value="True">
                                        <Setter Property="Visibility" Value="Hidden" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </StackPanel.Style>
                        <TextBlock Text="Added " />
                        <TextBlock Text="{Binding Path=ProcessedTags}" />
                        <TextBlock Text=" of " />
                        <TextBlock Text="{Binding Path=TotalTags}" />
                        <TextBlock Text=" found Songs: " />
                        <TextBlock Text="{Binding Path=Path}" />
                    </StackPanel>
                    <TextBlock Text="Searching..." Visibility="{Binding Path=IsProgressUnkown, Converter={StaticResource BooleanToVisibilityConverter}}" />
                </Grid>
            </StatusBarItem>
        </StatusBar>
    </Grid>
</Controls:MetroWindow>